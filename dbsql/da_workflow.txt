-- phpMyAdmin SQL Dump
-- version 3.2.0.1
-- http://www.phpmyadmin.net
--
-- 主机: localhost
-- 生成日期: 2013 年 03 月 05 日 17:09
-- 服务器版本: 5.5.8
-- PHP 版本: 5.3.3

SET SQL_MODE="NO_AUTO_VALUE_ON_ZERO";

--
-- 数据库: `da_workflow`
--
CREATE DATABASE `da_workflow` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci;
USE `da_workflow`;

-- --------------------------------------------------------

--
-- 表的结构 `w_arc`
--

CREATE TABLE IF NOT EXISTS `w_arc` (
  `a_id` int(10) NOT NULL AUTO_INCREMENT COMMENT '工作流向弧id',
  `a_wfid` int(10) NOT NULL COMMENT '工作流id',
  `a_sort` int(10) NOT NULL COMMENT '排序',
  `a_pid` int(10) NOT NULL COMMENT '向弧链接库所id',
  `a_tid` int(10) NOT NULL COMMENT '向弧链接变迁id',
  `a_direction` varchar(20) NOT NULL COMMENT '向弧走向；IN：库所走向事务变迁；OUT：事务变迁走向库所',
  `a_type` varchar(20) NOT NULL COMMENT '向弧类型；（分支或汇聚类型）SEQ：一般顺序流类型；Explicit Or Split：显示条件分支；Implicit Or Split：隐式条件分支； Or Join：条件汇聚（显示和隐式）；And Split：并行分支； And Join：并行汇聚',
  `a_precondition` text NOT NULL COMMENT '只有当a_type为Explicit Or Split时有效，这个包含了我们知道的值只有true或false的guard表达式。',
  PRIMARY KEY (`a_id`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 COMMENT='工作流向弧表' AUTO_INCREMENT=7 ;

--
-- 转存表中的数据 `w_arc`
--

INSERT INTO `w_arc` (`a_id`, `a_wfid`, `a_sort`, `a_pid`, `a_tid`, `a_direction`, `a_type`, `a_precondition`) VALUES
(1, 7, 1, 1, 3, 'IN', 'SEQ', ''),
(2, 7, 5, 9, 3, 'OUT', 'SEQ', ''),
(3, 7, 15, 9, 1, 'IN', 'SEQ', ''),
(4, 7, 20, 10, 1, 'OUT', 'SEQ', ''),
(5, 7, 25, 10, 2, 'IN', 'SEQ', ''),
(6, 7, 30, 2, 2, 'OUT', 'SEQ', '');

-- --------------------------------------------------------

--
-- 表的结构 `w_place`
--

CREATE TABLE IF NOT EXISTS `w_place` (
  `p_id` int(10) NOT NULL AUTO_INCREMENT COMMENT '库所id',
  `p_wfid` int(10) NOT NULL COMMENT '工作流id',
  `p_name` varchar(50) NOT NULL COMMENT '库所名称',
  `p_sort` int(10) NOT NULL COMMENT '排序',
  `p_type` varchar(20) NOT NULL COMMENT '库所类型；1：开始库所；50：中间库所；999：结束库所（当创建了一个新的工作流程时，会自动创建一个开始库所和结束库所）',
  `p_remark` text NOT NULL COMMENT '备注',
  PRIMARY KEY (`p_id`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 COMMENT='工作流库节点表' AUTO_INCREMENT=23 ;

--
-- 转存表中的数据 `w_place`
--

INSERT INTO `w_place` (`p_id`, `p_wfid`, `p_name`, `p_sort`, `p_type`, `p_remark`) VALUES
(1, 7, '开始', 0, '1', ''),
(2, 7, '结束', 9999, '999', ''),
(9, 7, '所属部门经理', 0, '50', ''),
(10, 7, '所属部门总监', 10, '50', ''),
(11, 11, '开始', 0, '1', ''),
(12, 11, '结束', 9999, '999', ''),
(13, 0, '开始', 0, '1', ''),
(14, 0, '结束', 9999, '999', ''),
(15, 14, '开始', 0, '1', ''),
(16, 14, '结束', 9999, '999', ''),
(17, 16, '开始', 0, '1', ''),
(18, 16, '结束', 9999, '999', ''),
(19, 12, '开始', 0, '1', ''),
(20, 12, '结束', 9999, '999', ''),
(21, 13, '开始', 0, '1', ''),
(22, 13, '结束', 9999, '999', '');

-- --------------------------------------------------------

--
-- 表的结构 `w_token`
--

CREATE TABLE IF NOT EXISTS `w_token` (
  `t_id` int(10) NOT NULL AUTO_INCREMENT COMMENT '令牌id',
  `t_wfid` int(10) NOT NULL COMMENT '工作流id',
  `t_cid` int(10) NOT NULL COMMENT '工作流实例id',
  `t_pid` int(10) NOT NULL COMMENT '所处库所id',
  `t_status` varchar(20) NOT NULL COMMENT '令牌状态；FREE：自由；LOCK：锁定；CONS：消耗；CANS：取消',
  `t_createdate` datetime NOT NULL COMMENT '令牌进入该库的日期',
  `t_canceldate` datetime NOT NULL COMMENT '令牌取消日期',
  `t_consumedate` datetime NOT NULL COMMENT '令牌被事务变迁发射时消耗日期',
  `t_context` text NOT NULL COMMENT '前一个事务变迁传递过来的sql where语句形式，或者是数据库基建。',
  PRIMARY KEY (`t_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='工作流实例进度令牌表' AUTO_INCREMENT=1 ;

--
-- 转存表中的数据 `w_token`
--


-- --------------------------------------------------------

--
-- 表的结构 `w_tran2form`
--

CREATE TABLE IF NOT EXISTS `w_tran2form` (
  `t2f_id` int(10) NOT NULL AUTO_INCREMENT COMMENT '事物变迁映射业务表单id',
  `t2f_tid` int(10) NOT NULL COMMENT '事物变迁id',
  `t2f_bfid` int(10) NOT NULL COMMENT '业务表单id',
  PRIMARY KEY (`t2f_id`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 COMMENT='事物变迁映射业务表单表' AUTO_INCREMENT=5 ;

--
-- 转存表中的数据 `w_tran2form`
--

INSERT INTO `w_tran2form` (`t2f_id`, `t2f_tid`, `t2f_bfid`) VALUES
(3, 3, 1);

-- --------------------------------------------------------

--
-- 表的结构 `w_tran2role`
--

CREATE TABLE IF NOT EXISTS `w_tran2role` (
  `t2r_id` int(10) NOT NULL AUTO_INCREMENT COMMENT '事务变迁映射角色id',
  `t2r_tid` int(10) NOT NULL COMMENT '事务变迁id',
  `t2r_prid` int(10) NOT NULL COMMENT '角色id',
  PRIMARY KEY (`t2r_id`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 COMMENT='事务变迁映射角色表' AUTO_INCREMENT=31 ;

--
-- 转存表中的数据 `w_tran2role`
--

INSERT INTO `w_tran2role` (`t2r_id`, `t2r_tid`, `t2r_prid`) VALUES
(20, 1, 3),
(21, 2, 2),
(25, 3, 2),
(26, 3, 3),
(27, 3, 4),
(28, 3, 5),
(30, 4, 5);

-- --------------------------------------------------------

--
-- 表的结构 `w_trancase`
--

CREATE TABLE IF NOT EXISTS `w_trancase` (
  `tc_id` int(10) NOT NULL AUTO_INCREMENT COMMENT '事务变迁工作项id',
  `tc_wfid` int(10) NOT NULL COMMENT '工作流id',
  `tc_tid` int(10) NOT NULL COMMENT '事务变迁id',
  `tc_wfcid` int(10) NOT NULL COMMENT '工作流实例id',
  `tc_type` varchar(20) NOT NULL COMMENT '事务变迁触发类型；USER：人工手动触发；AUTO：系统自动触发；MSG：外部消息触发；TIME：时限触发；（只有当变迁的所有输入库都有了令牌，该变迁才能从触发状态发射fire,如果发射成功，该变迁的所有输出库都会生成一个令牌）',
  `tc_firetaskid` int(10) NOT NULL COMMENT '工作项处理后，执行任务id',
  `tc_context` text NOT NULL COMMENT '工作项处理后，要传递给任务的数据库实体的基建，或者是sql where语句形式',
  `tc_status` varchar(20) NOT NULL COMMENT '工作项状态；EN：启用；IP：处理中；CA：取消； FI：完成',
  `tc_enabledate` datetime NOT NULL COMMENT '工作项启用日期',
  `tc_canceldate` datetime NOT NULL COMMENT '工作项取消日期',
  `tc_finishdate` datetime NOT NULL COMMENT '工作项完成日期',
  `tc_limit` int(10) NOT NULL COMMENT '只有当wi_type为TIME时才有效，表示小时数。',
  `tc_roleid` int(10) NOT NULL COMMENT '工作项执行者角色id',
  `tc_userid` int(10) NOT NULL COMMENT '工作项执行者用户id',
  PRIMARY KEY (`tc_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='事务变迁实例' AUTO_INCREMENT=1 ;

--
-- 转存表中的数据 `w_trancase`
--


-- --------------------------------------------------------

--
-- 表的结构 `w_transition`
--

CREATE TABLE IF NOT EXISTS `w_transition` (
  `t_id` int(10) NOT NULL AUTO_INCREMENT COMMENT '事务变迁id',
  `t_wfid` int(10) NOT NULL COMMENT '工作流id',
  `t_name` varchar(50) NOT NULL COMMENT '事务变迁名称',
  `t_sort` int(10) NOT NULL COMMENT '排序',
  `t_remark` text NOT NULL COMMENT '备注',
  `t_type` varchar(20) NOT NULL COMMENT '事务变迁触发类型；USER：人工手动触发；AUTO：系统自动触发；MSG：外部消息触发；TIME：时限触发；（只有当变迁的所有输入库都有了令牌，该变迁才能从触发状态发射fire,如果发射成功，该变迁的所有输出库都会生成一个令牌）',
  `t_limit` int(10) NOT NULL COMMENT '只有当t_type为TIME时才有效，表示小时数。',
  `t_firetaskid` int(10) NOT NULL COMMENT '事务变迁发射fire时，需要执行的任务id；若该任务id是一个工作流的开始任务，不能被任何变迁使用执行，因为这会导致另一个工作流实例产生，有可能会变成死循环。',
  `t_rolename` text NOT NULL COMMENT '事务变迁映射角色',
  `t_formname` text NOT NULL COMMENT '事务变迁映射表单',
  PRIMARY KEY (`t_id`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 COMMENT='工作流事务变迁节点表' AUTO_INCREMENT=5 ;

--
-- 转存表中的数据 `w_transition`
--

INSERT INTO `w_transition` (`t_id`, `t_wfid`, `t_name`, `t_sort`, `t_remark`, `t_type`, `t_limit`, `t_firetaskid`, `t_rolename`, `t_formname`) VALUES
(1, 7, '部门经理审核', 5, '', 'USER', 0, 0, '项目经理,', ''),
(2, 7, '部门总监确定', 10, '', 'USER', 0, 0, '总经理,', ''),
(3, 7, '创建假事单', 0, '', 'USER', 0, 0, '总经理,项目经理,新建角色,超级管理员,', '请假单,'),
(4, 11, '创建KPI表', 1, '', 'USER', 0, 0, '超级管理员,', '');

-- --------------------------------------------------------

--
-- 表的结构 `w_workflow`
--

CREATE TABLE IF NOT EXISTS `w_workflow` (
  `wf_id` int(10) NOT NULL AUTO_INCREMENT COMMENT '工作流id',
  `wf_wftid` int(10) NOT NULL COMMENT '工作流类型id',
  `wf_name` varchar(50) CHARACTER SET utf8 NOT NULL COMMENT '工作流名称',
  `wf_sort` int(10) NOT NULL COMMENT '排序',
  `wf_remark` text CHARACTER SET utf8 NOT NULL COMMENT '备注',
  `wf_starttaskid` int(10) NOT NULL COMMENT '启动工作流时，执行任务id（并在开始库放置令牌）',
  `wf_isrun` tinyint(1) NOT NULL COMMENT '工作流是否启用，默认为false（工作流完整性需要检验）',
  `wf_date` datetime NOT NULL COMMENT '工作流创建日期',
  `wf_user` varchar(50) CHARACTER SET utf8 NOT NULL COMMENT '工作流创建者',
  `wf_editdate` datetime NOT NULL COMMENT '最近一次变更日期',
  `wf_edituser` varchar(50) CHARACTER SET utf8 NOT NULL COMMENT '最近一次变更者',
  PRIMARY KEY (`wf_id`)
) ENGINE=InnoDB  DEFAULT CHARSET=latin1 COMMENT='工作流表' AUTO_INCREMENT=14 ;

--
-- 转存表中的数据 `w_workflow`
--

INSERT INTO `w_workflow` (`wf_id`, `wf_wftid`, `wf_name`, `wf_sort`, `wf_remark`, `wf_starttaskid`, `wf_isrun`, `wf_date`, `wf_user`, `wf_editdate`, `wf_edituser`) VALUES
(7, 2, '员工假事', 0, '', 0, 1, '2013-02-15 00:21:09', '徐飞', '2013-02-23 00:39:05', '徐飞'),
(11, 2, '员工KPI考评审核流程 ', 0, '', 0, 0, '2013-02-15 01:56:42', '徐飞', '2013-02-16 20:10:06', '徐飞'),
(12, 5, '客户关系管理', 0, '', 0, 0, '2013-02-24 20:50:06', '徐飞', '0000-00-00 00:00:00', ''),
(13, 5, '订单管理', 0, '', 0, 0, '2013-02-24 20:50:21', '徐飞', '0000-00-00 00:00:00', '');

-- --------------------------------------------------------

--
-- 表的结构 `w_workflowcase`
--

CREATE TABLE IF NOT EXISTS `w_workflowcase` (
  `wfc_id` int(10) NOT NULL AUTO_INCREMENT COMMENT '工作流实例id',
  `wfc_wfid` int(10) NOT NULL COMMENT '工作流id',
  `wfc_status` varchar(20) NOT NULL COMMENT '工作流实例当前状态；OP：开放；CL：关闭；SU：挂起；CA：取消；',
  `wfc_startdate` datetime NOT NULL COMMENT '工作流实例启动日期',
  `wfc_enddate` datetime NOT NULL COMMENT '工作流实例关闭日期（令牌放入结束库时）',
  `wfc_context` text NOT NULL COMMENT 'sql where语句形式的，或者是数据库基建。这个由对应工作流的启动任务id（w_starttaskid）产生的',
  PRIMARY KEY (`wfc_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='工作流实例表' AUTO_INCREMENT=1 ;

--
-- 转存表中的数据 `w_workflowcase`
--


-- --------------------------------------------------------

--
-- 表的结构 `w_workflowtype`
--

CREATE TABLE IF NOT EXISTS `w_workflowtype` (
  `wft_id` int(10) NOT NULL AUTO_INCREMENT COMMENT '工作流分类id',
  `wft_pid` int(10) NOT NULL COMMENT '工作流分类父id',
  `wft_name` varchar(50) NOT NULL COMMENT '工作流分类名称',
  `wft_sort` int(10) NOT NULL COMMENT '排序',
  `wft_date` datetime NOT NULL COMMENT '创建日期',
  `wft_remark` text NOT NULL COMMENT '备注',
  PRIMARY KEY (`wft_id`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 COMMENT='工作流分类表' AUTO_INCREMENT=9 ;

--
-- 转存表中的数据 `w_workflowtype`
--

INSERT INTO `w_workflowtype` (`wft_id`, `wft_pid`, `wft_name`, `wft_sort`, `wft_date`, `wft_remark`) VALUES
(1, -1, '成都网联天下（工作流）', 0, '2013-02-14 18:44:28', ''),
(2, 1, '人事部工作流', 50, '2013-02-14 00:00:00', ''),
(3, 1, '技术部工作流', 20, '0000-00-00 00:00:00', ''),
(4, 1, '客服部工作流', 10, '0000-00-00 00:00:00', ''),
(5, 1, '市场部工作流', 1, '0000-00-00 00:00:00', ''),
(6, 3, '新建工作流类型', 0, '0000-00-00 00:00:00', ''),
(7, 5, '客户关系管理', 0, '0000-00-00 00:00:00', ''),
(8, 5, '新建工作流类型', 0, '0000-00-00 00:00:00', '');
